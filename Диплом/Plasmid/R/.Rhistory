s = read.table('File_with_plasmid.txt')
s <- as.data.frame(s)
View(s)
colnames(s) <- c('qseqid','sseqid', '%_ident','query_len','alignment_length', 'match','gap','qstart','qend', 'ssart', 'send' ,'evalue', 'bitscore')
colnames(s) <- c('qseqid','sseqid', '%_ident','query_len','alignment_length', 'match','gap','qstart','qend', 'ssart', 'send' ,'evalue', 'bitscore')
View(s)
s$alight <- s$qend-s$qstart+1
s$query_cover <- s$alight/s$query_len*100
View(s)
new <- subset.data.frame(s , subset = s$query_cover>90 & s$`%_ident`>80)
View(new)
m <- unique(new$qseqid)
m <- length(m)
m <- length(m)
View(s)
m <- unique(s$qseqid)
m <- unique(new$qseqid)
m <- length(m)
m
m <- unique(new$qseqid)
View(s)
m <- length(m)
m <- unique(new$qseqid)
View(s)
m <- unique(new$qseqid)
View(m)
unique(new$qseqid)
View(m)
m <- length(m)
m <- length(m)
m
m <-unique(new$qseqid)
View(m)
m <- length(m)
m
write.table(m , file = "Numbers.txt")
m <-unique(new$qseqid)
write.table(m , file = "Numbers.txt")
write.csv(m , file = "Numbers.txt")
m <-as.character(unique(new$qseqid))
write.csv(m , file = "Numbers.txt")
as.character(unique(new$qseqid))
write.table(m , file = "Numbers.txt")
m <-as.character(unique(new$qseqid))
write.table(m , file = "Numbers.txt")
writeLines(m, file = 'M.txt')
library("Biostrings")
s = readDNAStringSet("Final.fasta",use.names = T, seek.first.rec = T)
discription <- names(s)
s <- as.data.frame(s)
s$id <- rownames(s)
rownames(s) <- (1:nrow(s))
colnames(s) <- c('seq', 'id')
View(s)
get_genus <- function(df){
id <- df$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[1] )
}
get_genus(s)
get_genus <- function(df){
id <- df$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[1])
return(genus)
}
get_genus(s)
get_genus <- function(df){
id <- df$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[[1]])
return(genus)
}
get_genus(s)
id <- s$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[[1]])
genus
strsplit(id[1],split = ' ')
get_genus <- function(df){
id <- df$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[[1]][1])
return(genus)
}
get_genus(s)
s$genus <- ges_genus(s)
s$genus <- get_genus(s)
get_domen <- function(df) {
id <- df$id
domen <- sapply(id, function(x) tail(strsplit(x,split = '~')[[1]], n=1))
return(domen)
}
get_domen(s)
s$domen <- get_domen
s$domen <- get_domen(s)
unique_domens <- unique(s$domen)
unique_domens
length(unique_domens)
get_number_for_genus <- function(genus){
length(unique(s[s$genus==genus,]$domen))
}
sapply(unique(s$genus), get_number_for_genus)
number_of_domens_for_genus <_sapply(unique(s$genus), get_number_for_genus)
number_of_domens_for_genus <-sapply(unique(s$genus), get_number_for_genus)
number_of_domens_for_genus
number_of_domens_for_genus
saveRDS(number_of_domens_for_genus, file = 'number_of_domen_for_genus.rds')
s
number_of_domens_for_genus <- readRDS('number_of_domen_for_genus.rds')
source('C:/Users/voros/Desktop/Plasmid/R/script1.R', echo=TRUE)
q()
q()
library("Biostrings")
s = readDNAStringSet("Final.fasta",use.names = T, seek.first.rec = T)
discription <- names(s)
s <- as.data.frame(s)
s$id <- rownames(s)
rownames(s) <- (1:nrow(s))
colnames(s) <- c('seq', 'id')
get_genus <- function(df){
id <- df$id
genus <- sapply(id, function(x) strsplit(x,split = ' ')[[1]][1])
return(genus)
}
s$genus <- get_genus(s)
get_domen <- function(df) {
id <- df$id
domen <- sapply(id, function(x) tail(strsplit(x,split = '~')[[1]], n=1))
return(domen)
}
s$domen <- get_domen(s)
unique_domens <- unique(s$domen) # only 26 WTF?????
unique_domens
